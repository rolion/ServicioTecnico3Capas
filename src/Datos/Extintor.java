package Datos;
// Generated Sep 2, 2015 4:26:49 PM by Hibernate Tools 4.3.1


import interfaces.ProtoType;
import interfaces.SpecificParticipant;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import org.hibernate.Query;

/**
 * Extintor generated by hbm2java
 */
public class Extintor extends SpecificParticipant implements java.io.Serializable, ProtoType {
     private Integer id;
     private AgenteQuimico agenteQuimico;
     private String clasificacion;
     private Boolean eliminado;
     private int peso;
     private Set detalleNotas = new HashSet(0);
     private long currentTransaction;
    public Extintor() {
        this.currentTransaction=0;
    }

	
    public Extintor(int peso) {
        this.peso = peso;
    }
    public Extintor(AgenteQuimico agenteQuimico, String clasificacion, Boolean eliminado, int peso, Set detalleNotas) {
       this.agenteQuimico = agenteQuimico;
       this.clasificacion = clasificacion;
       this.eliminado = eliminado;
       this.peso = peso;
       this.detalleNotas = detalleNotas;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public AgenteQuimico getAgenteQuimico() {
        return this.agenteQuimico;
    }
    
    public void setAgenteQuimico(AgenteQuimico agenteQuimico) {
        this.agenteQuimico = agenteQuimico;
    }
    public String getClasificacion() {
        return this.clasificacion;
    }
    
    public void setClasificacion(String clasificacion) {
        this.clasificacion = clasificacion;
    }
    public Boolean getEliminado() {
        return this.eliminado;
    }
    
    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }
    public int getPeso() {
        return this.peso;
    }
    
    public void setPeso(int peso) {
        this.peso = peso;
    }
    public Set getDetalleNotas() {
        return this.detalleNotas;
    }
    
    public void setDetalleNotas(Set detalleNotas) {
        this.detalleNotas = detalleNotas;
    }

    @Override
    public List buscar() throws Exception {
        try {
             getConection();
             getConection().beginTransaction();
             String hql="FROM Extintor AS e JOIN FETCH e.agenteQuimico aq WHERE e.agenteQuimico = :agente "
                     + "AND e.eliminado = :estado";
             Query query =getConection().createQuery(hql);
             query.setEntity("agente", this.agenteQuimico);
             query.setBoolean("estado", Boolean.FALSE);
             List l=null;
             l=query.list();
             getConection().getTransaction().commit();
             return l;
         } catch (Exception ex) {   
            if(getConection()!=null)
               getConection().getTransaction().rollback();
            throw new Exception("Erro al buscar");
         }
    }

    @Override
    public Boolean eliminar() throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }



    @Override
    public Object modificar() throws Exception {
            return modificarEntidad(this);
    }

    public List listarTodos() throws Exception{
    try {
             getConection();
             getConection().beginTransaction();
             String hql="FROM Extintor AS e JOIN FETCH e.agenteQuimico aq WHERE "
                     + "e.eliminado = :estado";
             Query query =getConection().createQuery(hql);
             query.setBoolean("estado", Boolean.FALSE);
             List l=null;
             l=query.list();
             getConection().getTransaction().commit();
             return l;
         } catch (Exception ex) { 
             System.out.println(ex.getMessage());
            if(getConection()!=null)
               getConection().getTransaction().rollback();
            throw new Exception("Erro al buscar");
         }
    }

    @Override
    public String toString() {
        return  agenteQuimico.getNombre()+" "+String.valueOf(this.peso)+" kg" ;
    }



    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Extintor other = (Extintor) obj;
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        if (!Objects.equals(this.agenteQuimico, other.agenteQuimico)) {
            return false;
        }
        if (!Objects.equals(this.clasificacion, other.clasificacion)) {
            return false;
        }
        if (!Objects.equals(this.eliminado, other.eliminado)) {
            return false;
        }
        if (this.peso != other.peso) {
            return false;
        }
        return true;
    }

    @Override
    public Object guardar(long transactionID) throws Exception {
        return guardarEntidad(this);
    }

    @Override
    public boolean join(long transactionID) {
        if(this.currentTransaction!=0){
            return false;
        }
        this.currentTransaction=transactionID;
        return true;
    }

    @Override
    public boolean commit(long transactionID) throws Exception {
        if(this.currentTransaction!=transactionID){
            System.out.println("id de transaccion equivocado");
            System.out.println("currentTransaction= "+this.currentTransaction);
            System.out.println("transactionID= "+transactionID);
            return false;
        }
        this.guardar(transactionID);
        return true;
    }

    @Override
    public boolean cancel(long transactionID) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object guardar() throws Exception {
        return guardarEntidad(this);
    }

    @Override
    public Object copiarProfunda() {
        Extintor clone=new Extintor();
        clone.setAgenteQuimico(this.agenteQuimico);
        clone.setClasificacion(clasificacion);
        clone.setEliminado(eliminado);
        clone.setId(id);
        clone.setPeso(peso);
        return clone;
    }

    

}


