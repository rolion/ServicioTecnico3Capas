package Datos;
// Generated Sep 2, 2015 4:26:49 PM by Hibernate Tools 4.3.1

import interfaces.THibernateHelper;
import java.util.List;
import org.hibernate.HibernateException;
import org.hibernate.Query;




/**
 * DetalleNota generated by hbm2java
 */
public class DetalleNota extends THibernateHelper implements java.io.Serializable {


     private Integer id;
     private Extintor extintor;
     private NotaServicio notaServicio;
     private Integer cantidad;
     private long currentTransaction;
    public DetalleNota() {
        this.currentTransaction=0;
    }

    public DetalleNota(Extintor extintor, NotaServicio notaServicio, Integer cantidad) {
       this.extintor = extintor;
       this.notaServicio = notaServicio;
       this.cantidad = cantidad;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Extintor getExtintor() {
        return this.extintor;
    }
    
    public void setExtintor(Extintor extintor) {
        this.extintor = extintor;
    }
    public NotaServicio getNotaServicio() {
        return this.notaServicio;
    }
    
    public void setNotaServicio(NotaServicio notaServicio) {
        this.notaServicio = notaServicio;
    }
    public Integer getCantidad() {
        return this.cantidad;
    }
    
    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }

    @Override
    public List buscar() throws Exception {
        String query="FROM DetalleNota dn JOIN FETCH dn.notaServicio ns "
                + " JOIN FETCH dn.extintor e JOIN FETCH e.agenteQuimico WHERE "
                + "ns.id = :id AND ns.eliminado = :estado";
        return buscarEntidad(query, this.getNotaServicio().getId());
    }

    @Override
    public Boolean eliminar() throws Exception {
        eliminarEntidad(this);
        return true;
    }

    @Override
    public Object guardar(long transactionID) throws Exception {
        return guardarEntidad(this);
    }

    @Override
    public Object modificar() throws Exception {
        return modificarEntidad(this);
    }



    @Override
    public boolean join(long transactionID) {
        if(this.currentTransaction!=0){
            return false;
        }
        this.currentTransaction=transactionID;
        return true;
    }

    @Override
    public boolean commit(long transactionID) throws Exception {
        if(this.currentTransaction!=transactionID){
            System.out.println("id de transaccion equivocado");
            System.out.println("currentTransaction= "+this.currentTransaction);
            System.out.println("transactionID= "+transactionID);
            return false;
        }
        this.guardar(transactionID);
        return true;
    }

    @Override
    public boolean cancel(long transactionID) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object guardar() throws Exception {
        return guardarEntidad(this);
    }




}


