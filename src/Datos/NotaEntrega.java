package Datos;
// Generated Sep 4, 2015 11:14:54 AM by Hibernate Tools 4.3.1


import interfaces.SpecificParticipant;
import java.util.Date;
import java.util.List;
import org.hibernate.HibernateException;
import org.hibernate.Query;

/**
 * NotaEntrega generated by hbm2java
 */
public class NotaEntrega extends SpecificParticipant implements java.io.Serializable {


     private Integer id;
     private NotaPerito notaPerito;
     private Date fecha;
     private Boolean eliminado;
     private long currentTransaction;
    public NotaEntrega() {
        this.currentTransaction=0;
    }

    public NotaEntrega(NotaPerito notaPerito, Date fecha, Boolean eliminado) {
       this.notaPerito = notaPerito;
       this.fecha = fecha;
       this.eliminado = eliminado;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public NotaPerito getNotaPerito() {
        return this.notaPerito;
    }
    
    public void setNotaPerito(NotaPerito notaPerito) {
        this.notaPerito = notaPerito;
    }
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }
    public Boolean getEliminado() {
        return this.eliminado;
    }
    
    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Override
    public List buscar() throws Exception {
        String q="FROM NotaEntrega ne JOIN FETCH ne.notaPerito np JOIN FETCH np.persona "
                + "JOIN FETCH np.notaServicio where np.id = :id and ne.eliminado= :estado";
        return this.buscarEntidad(q, this.notaPerito.getId());
    }

    @Override
    public Boolean eliminar() throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    @Override
    public Object modificar() throws Exception {
        return this.modificarEntidad(this);
    }
    public List listarTodos() throws Exception{
        try{
            initTransaction();
            Query q=getConection().createQuery("FROM NotaEntrega ne JOIN FETCH ne.notaPerito np JOIN FETCH "
                + "np.notaServicio JOIN FETCH np.persona"
                + "WHERE ne.eliminado= :estado").setBoolean("estado", Boolean.FALSE);
            List r=q.list();
            comitTransaction();
            return r;
        }catch(HibernateException he){
            throw new Exception("Error a listar Todos");
        }catch(Exception e){
            throw new Exception("Error a listar Todos");
        }
            
        
    }

    @Override
    public Object guardar(long transactionID) throws Exception {
         return this.guardarEntidad(this);
    }

    @Override
    public boolean join(long transactionID) {
                if(this.currentTransaction!=0){
            return false;
        }
        this.currentTransaction=transactionID;
        return true;
    }

    @Override
    public boolean commit(long transactionID) throws Exception {
        if(this.currentTransaction!=transactionID){
            System.out.println("id de transaccion equivocado");
            System.out.println("currentTransaction= "+this.currentTransaction);
            System.out.println("transactionID= "+transactionID);
            return false;
        }
        this.guardar(transactionID);
        return true;
    }

    @Override
    public boolean cancel(long transactionID) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object guardar() throws Exception {
        return this.guardarEntidad(this);
    }



}


