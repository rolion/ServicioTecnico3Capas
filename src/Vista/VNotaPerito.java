/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import DatosSql.DetallePeritoDTO;
import DatosSql.NotaPeritoDTO;
import DatosSql.NotaServicioDTO;
import DatosSql.PersonaDTO;
import DatosSql.ServicioDTO;
import Negocio.NGestionarPersona;
import Negocio.NGestionarServicio;
import Negocio.NNotaPerito;
import Negocio.NNotaServicio;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import util.jTableModel;

/**
 *
 * @author oscar
 */
public class VNotaPerito extends javax.swing.JFrame {

    /**
     * Creates new form VNotaPerito
     */
    private List listanota;
    private List listapersona;
    private List listaservicio;
    private List listSelectedServicio;
    private NNotaPerito nNotaPerito;
    private Object [] titulo={"Id","Servicio","Precio"};
    private int selectedRowIndex;
    private float total;
    public VNotaPerito() throws SQLException, ClassNotFoundException {
        initComponents();
        initComboBox();
        this.listSelectedServicio=new ArrayList();
        this.nNotaPerito=new NNotaPerito();
    }
    private void initComboBox() throws SQLException, ClassNotFoundException{

        try {
            listaservicio=new NGestionarServicio().listarTodos();
            if(listaservicio!=null){
                this.jCBservicio.setModel
                    (new DefaultComboBoxModel
                        (listaservicio.toArray()));
            }else{
                this.jCBservicio.setModel(new DefaultComboBoxModel(new ArrayList().toArray()));
            }
            this.jCBservicio.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    ServicioDTO s=(ServicioDTO) jCBservicio.getSelectedItem();
                   // listSelectedServicio.add(s);
                    jTFprecio.setText(s.getPrecio().toString());
                }
            });
            this.listapersona=new NGestionarPersona()
                            .listarTecnico();
            if(listapersona!=null){
                this.jCBperito.setModel
                    (new DefaultComboBoxModel(listapersona.toArray()));
            }else{                
                this.jCBperito.setModel(new DefaultComboBoxModel(new ArrayList().toArray()));
            }
            listanota=new NNotaServicio().listarTodos();
            if(listanota!=null){
                this.jCBnotaservicio.setModel(new DefaultComboBoxModel(listanota.toArray()));
            }else
                this.jCBnotaservicio.setModel(new DefaultComboBoxModel(new ArrayList().toArray()));
        } catch (Exception ex) {
            
            Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFid = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jCBnotaservicio = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTFfecha = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jCBperito = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jBguardar = new javax.swing.JButton();
        jBdardebaja = new javax.swing.JButton();
        jBbuscar = new javax.swing.JButton();
        jBagregar = new javax.swing.JButton();
        jBquitar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCBservicio = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTFprecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NotaPerito");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cabecera"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel1, gridBagConstraints);

        jTFid.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 32;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jTFid, gridBagConstraints);

        jLabel2.setText("NotaServicio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel2, gridBagConstraints);

        jCBnotaservicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 27;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jCBnotaservicio, gridBagConstraints);

        jLabel3.setText("Fecha");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel3, gridBagConstraints);

        jTFfecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jTFfecha, gridBagConstraints);

        jLabel4.setText("Perito");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel4, gridBagConstraints);

        jCBperito.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jCBperito, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jBguardar.setText("Guardar");
        jBguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBguardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jBguardar, gridBagConstraints);

        jBdardebaja.setText("DarDeBaja");
        jBdardebaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdardebajaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jBdardebaja, gridBagConstraints);

        jBbuscar.setText("Buscar");
        jBbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBbuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jBbuscar, gridBagConstraints);

        jBagregar.setText("Agregar");
        jBagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBagregarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jBagregar, gridBagConstraints);

        jBquitar.setText("Quitar");
        jBquitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBquitarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jBquitar, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Servicio", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Servicio"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Servicio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jLabel5, gridBagConstraints);

        jCBservicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jCBservicio, gridBagConstraints);

        jLabel6.setText("precio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jLabel6, gridBagConstraints);

        jTFprecio.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jTFprecio, gridBagConstraints);

        jLabel7.setText("Total");

        jTextField2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBdardebajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdardebajaActionPerformed
        try {
            this.nNotaPerito.darDeBaja(Integer.valueOf(
                    this.jTFid.getText()),
                    (NotaServicioDTO)this.jCBnotaservicio.getSelectedItem(), 
                    (PersonaDTO)this.jCBperito.getSelectedItem(),
                    getDate(), this.listSelectedServicio);
            this.jTFid.setText("");
            this.jTFfecha.setText("");
            this.listSelectedServicio.removeAll(listSelectedServicio);
            this.jTextField2.setText("");
            cargarDetalle();
            showMessage("nota eliminado", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBdardebajaActionPerformed
    private java.sql.Date  getDate(){
        try { 
            DateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
            Date myDate;
            myDate = formatter.parse(this.jTFfecha.getText());
            java.sql.Date sqlDate = new java.sql.Date(myDate.getTime());
            return sqlDate;
        } catch (ParseException ex) {
            Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    private void jBguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBguardarActionPerformed
        try {
            this.jTFid.setText(String.valueOf(
                    this.nNotaPerito.nuevaNotaPerito(
                    (NotaServicioDTO)this.jCBnotaservicio.getSelectedItem(),
                    (PersonaDTO)this.jCBperito.getSelectedItem(), 
                    getDate(), 
                    this.listSelectedServicio).getId()));
                    showMessage("Datos guardados", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            showMessage(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBguardarActionPerformed

    private void jBagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBagregarActionPerformed
        ServicioDTO s=(ServicioDTO) this.jCBservicio.getSelectedItem();
        DetallePeritoDTO detalle=new DetallePeritoDTO();
        detalle.setCantidad(1);
        detalle.setServicio((ServicioDTO) s.copiarProfunda());
        this.listSelectedServicio.add(detalle);
        total=total+s.getPrecio();
        this.jTextField2.setText(String.valueOf(total));
        cargarDetalle();
    }//GEN-LAST:event_jBagregarActionPerformed

    private void jBquitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBquitarActionPerformed
        if(selectedRowIndex>-1){
            total=total-(((DetallePeritoDTO)this.listSelectedServicio.get(selectedRowIndex))).getServicio().getPrecio();
            this.jTextField2.setText(String.valueOf(total));
            this.listSelectedServicio.remove(selectedRowIndex);
            cargarDetalle();
            selectedRowIndex=-1;
        }
    }//GEN-LAST:event_jBquitarActionPerformed

    private void jBbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
            
            NotaPeritoDTO np=this.nNotaPerito.buscarPorId(
                    Integer.valueOf(this.jTFid.getText()));
            if(np!=null){
                this.jTFid.setText(np.getId().toString());
            this.jTFfecha.setText(sdf.format(np.getFecha()));
            this.jCBperito.setSelectedItem(np.getPerito());
            this.listSelectedServicio.addAll(np.getDetalle());
            cargarDetalle();
            }else
                showMessage("no se encontraron resultados", JOptionPane.INFORMATION_MESSAGE);
            
            
        } catch (Exception ex) {
            showMessage(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBbuscarActionPerformed
    private void showMessage(String mensaje,int tipo){
        JOptionPane.showMessageDialog(this, mensaje, "Error", tipo);
    }
    private void cargarDetalle(){
            try {
                Object matriz [][];
                jTableModel model;
                if(listSelectedServicio!=null && !listSelectedServicio.isEmpty()){
                    matriz =new Object[listSelectedServicio.size()][3];
                    for(int i=0;i<listSelectedServicio.size();i++){
                        DetallePeritoDTO tp=(DetallePeritoDTO) listSelectedServicio.get(i);
                        matriz[i][0]=tp.getServicio().getId().toString();
                        matriz[i][1]=tp.getServicio().getDescripcion();
                        matriz[i][2]=tp.getServicio().getPrecio().toString();
                    } 
                }else{
                    matriz=new Object[1][3];
                    matriz[0][0]="";
                    matriz[0][1]="";
                    matriz[0][2]="";
                }
                model=new jTableModel(titulo, matriz);
                this.jTable1.setModel(model);
                settableListener();   

            }catch (Exception ex) {
                    showMessage(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        }
        private void settableListener(){
        
            this.jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(ListSelectionEvent e) {
                    selectedRowIndex=jTable1.getSelectedRow();
                }
            });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VNotaPerito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VNotaPerito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VNotaPerito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VNotaPerito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VNotaPerito().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(VNotaPerito.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBagregar;
    private javax.swing.JButton jBbuscar;
    private javax.swing.JButton jBdardebaja;
    private javax.swing.JButton jBguardar;
    private javax.swing.JButton jBquitar;
    private javax.swing.JComboBox jCBnotaservicio;
    private javax.swing.JComboBox jCBperito;
    private javax.swing.JComboBox jCBservicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTFfecha;
    private javax.swing.JFormattedTextField jTFid;
    private javax.swing.JTextField jTFprecio;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
